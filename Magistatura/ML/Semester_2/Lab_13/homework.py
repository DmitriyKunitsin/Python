'''
    YOLO: Использование предобученной нейронной сети для детекции объектов. 
        Изучите приложенные ссылки. 
        Выберите подходящую для выполнения работы модель YOLO. 
        Загрузите произвольные фотографии с изображением объектов из набора предобученной нейронной сети. 
        Выполните дектекцию объектов и сделайте выводы (сеть обучена на картинках размером 640х640, 
        как она работает с изображениями других разрешений?). 
        Попробуйте детектировать только 2-а типа объектов, а не все 80, на которые рассчитана YOLO. 
        Проделайте такую же работу с видео. 
        Следующая часть работы связана с тестированием используемой модели. 
        Скачайте размеченный датасет. 
        Получите оценки точности работы YOLO - дайте пояснения используемым метрикам. 
        Сравните по точности и по времени работы две модели - nano и small. 

        1. Документация по ultralytics YOLOv8 : https://docs.ultralytics.com/ru
        2. Конфигурационный файл по умолчанию : https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/default.yaml
        3. Набор размеченных данных : https://storage.googleapis.com/openimages/web/visualizer/index.html?type=segmentation&set=train&r=false&c=%2Fm%2F0663v
        4. Перечень предобученных моделей и классов объектов : https://www.freecodecamp.org/news/how-to-detect-objects-in-images-using-yolov8/
        5. Пример дектекции предобученной моделью и обучение для пользовательских объектов : https://uproger.com/obuchaem-s-yolov8-na-polzovatelskih-dannyh-yolov8-instrukcziya-po-rabote/
        6. Пример детекции дорожных знаков : https://habr.com/ru/articles/754206/
        7. Пример использования ClassifAI для разметки данных : https://skine.ru/articles/54127/
        8. Набор данных COCO - возможно понадобится для скачивания меток классов : https://cocodataset.org/#home
'''

def main():
    print('Hello')

if __name__ == "__main__":
    main()